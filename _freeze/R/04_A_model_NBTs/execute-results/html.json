{
  "hash": "11534e9e2a8217bd6f5702d2a7db6a1e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"04_A_model_NBTs\"\nformat: html\neval: FALSE\n---\n\n\n# General overview\n\nHere we provided the code used to model the total number of NBT, Domestic Contribution (DC), Domestic Retention (DR), Native turnover and NBT turnover. These models are represented in Figures 4 in the main text, Figure S3 and S4, and tables S1, S2 and S3 in Supplementary material\n\n# Reading libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data\nlibrary(dplyr)       # data manipulation\nlibrary(readr)       # read CSV files\nlibrary(here)        # file paths handling\n\n# plot\nlibrary(scales)      # data transformation functions\nlibrary(ggplot2)     # data visualization\n\n# model\nlibrary(glmmTMB)     # generalized Linear Mixed Models\nlibrary(performance) # model performance checks\nlibrary(bbmle)       # model selection and AIC calculations\nlibrary(DHARMa)      # model diagnostics and residuals simulation\n```\n:::\n\n\n# Previous data used\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 02_C_data_preparation_models.qmd\ndf_country_complete6 <- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsqrt_trans <- scales::trans_new(\"sqrt_with_zero\", \n                        transform = function(x) ifelse(x == 0, 0, sqrt(x)),\n                        inverse = function(x) x^2)\n\n# dummy data\nplot_data <- data.frame(x = 0:10,\n                        y = 0:10)\n```\n:::\n\n\n# Modelling primary type distribution with biological and sociological/economic/political variables\n\nWe used four response variables. \n\n- The total number of NBTs owned by a country `total_country_museum`\n\n- The proportion of Domestic Contribution by a country `prop_DC` and `success.DC`\n\n- The proportion of Domestic Retention by a country `prop_DR` and `success.DR`\n\n- The rate of native underrepresentation by a country `native.beta`\n\n- The rate of type overrepresentation by a country `type.beta`\n\nAll these variables are used in a country level grain.\n\n\n# Data and Models\n\n## Total number of NBT by country\n\nAfter standardize the variables we can fit the models. Since we have a huge amount of zeroes in our response variable we will use a zero-inflation poisson model and also test with a poisson distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_country_complete6, aes(type.richness.pad)) +\n  geom_density(alpha = 0.4, fill = \"darkorange\")\n```\n:::\n\n\nFitting different models to check which one is the most appropriate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_pois <-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad + \n                     records.per.area.pad + years.independence.pad + \n                     gdp.pad + n.museums.pad, zi = ~., \n                   data = df_country_complete6, \n                   family = poisson) # poisson\n\nmod_zero_pois <-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad + \n                     records.per.area.pad + years.independence.pad + \n                     gdp.pad + n.museums.pad, zi = ~., \n                   data = df_country_complete6, \n                   family = glmmTMB::nbinom2) # negative binomial\n\nmod_hurdle <-\n  glmmTMB::glmmTMB(type.richness.pad ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad,\n                   zi = ~.,\n                   data = df_country_complete6,\n                   family = glmmTMB::truncated_nbinom2)\n\nsummary(mod_hurdle)\nperformance::check_zeroinflation(mod_hurdle)\nsummary(mod_zero_pois)\nperformance::check_zeroinflation(mod_zero_pois)\n\n## model selection\nbbmle::ICtab(mod_pois, mod_zero_pois, mod_hurdle)\n\n# checking homocedasticity \nDHARMa::simulateResiduals(fittedModel = mod_zero_pois, plot = T)\nDHARMa::simulateResiduals(fittedModel = mod_hurdle, plot = T)\n\nperformance::check_collinearity(mod_zero_pois)\n# Exporting best model\n\nsaveRDS(mod_zero_pois, here::here(\"output\", \"models\", \"model_res_counting.rds\"))\n```\n:::\n\n\n## Modelling native deficit and primary type overrepresentation\n\nIn this section we will model the two turnover metrics that represent the deficit of native species in biological collections of a given country and the overrepresentation of primary types regarding the native fish fauna of a given country. These variables are `native.beta` and `type.beta`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_native_turnover <-\n  glmmTMB::glmmTMB(native.beta.model ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, \n                   family = glmmTMB::beta_family,\n                   data = df_country_complete6)\n\n\nmod_type_turnover <-\n  glmmTMB::glmmTMB(type.beta.model ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, \n                   family = glmmTMB::beta_family,\n                   data = df_country_complete6)\n\n\n## Diagnose plots\nsummary(mod_native_turnover)\nsummary(mod_type_turnover)\n\nDHARMa::simulateResiduals(fittedModel = mod_native_turnover, plot = TRUE)\nDHARMa::simulateResiduals(fittedModel = mod_type_turnover, plot = TRUE)\nperformance::check_collinearity(mod_native_turnover)\nperformance::check_collinearity(mod_type_turnover)\n\n# Saving models\n\nsaveRDS(mod_native_turnover, here::here(\"output\", \"models\", \"model_res_turnover_native.rds\"))\nsaveRDS(mod_type_turnover, here::here(\"output\", \"models\", \"model_res_turnover_nbt.rds\"))\n```\n:::\n\n\n## Modelling country characteristics based on biological collections (Domestic Contribution and Domestic Retention)\n\nModel with a binomial distribution with success and failures using the raw data used to calculate retention (DR) rate and contribution rate (DC)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_beta_dc_binom <-\n  glmmTMB::glmmTMB(cbind(success.DC, failures.DC) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, ziformula = ~.,\n                   family = glmmTMB::betabinomial, \n                   data = df_country_complete6)\n\nDHARMa::simulateResiduals(fittedModel = mod_beta_dc_binom, plot = TRUE)\nsummary(mod_beta_dc_binom)\nperformance::check_collinearity(mod_beta_dc_binom)\n\nmod_beta_dr_binom <-\n  glmmTMB::glmmTMB(cbind(success.DR, failures.DR) ~ native.richness.pad +\n                     records.per.area.pad + years.independence.pad +\n                     gdp.pad + n.museums.pad, ziformula = ~., \n                   family = glmmTMB::betabinomial, \n                   data = df_country_complete6)\n\nDHARMa::simulateResiduals(fittedModel = mod_beta_dr_binom, \n                          plot = TRUE)\nsummary(mod_beta_dr_binom)\nperformance::check_collinearity(mod_beta_dr_binom)\n\n# saving results\nsaveRDS(mod_beta_dc_binom, \n        here::here(\"output\", \"models\", \"model_res_dc.rds\"))\nsaveRDS(mod_beta_dr_binom, \n        here::here(\"output\", \"models\", \"model_res_dr.rds\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}