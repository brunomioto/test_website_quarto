{
  "hash": "5dfac80f39bb228ce145f4ca5bbf7827",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"01_D_data_preparation\"\nsubtitle: \"Data preparation\"\nformat: html\neval: FALSE\ndate: 2024-07-24\nauthor:\n  - name: Gabriel Nakamura\n    orcid: 0000-0002-1825-0097\n    affiliation: \n      - name: Universidade de São Paulo\n        city: São Paulo\n      - name: National Institute of Science and Technology\n        city: Goiânia\n  - name: Bruno H. M. Stabile\n    orcid: 0000-0002-1825-0097\n    affiliation: \n      - name: Graduate Program in Ecology of Inland Water Ecosystems\n        city: Maringá\n---\n\n\n# General overview\n\nIn this document we provide all the scripts needed to process the main data and later create models and figures.\n\n# Reading libraries, data and basic functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)   # data manipulation\nlibrary(tidyr)   # data tidying\nlibrary(glue)    # string interpolation\nlibrary(here)    # constructing file paths\nlibrary(readr)   # reading CSV files\n\n# create period of 50 years\nfloor_period = function(value){ return(value - value %% 50) }\n```\n:::\n\n\nData from NBTs (Name Bearing Types) flow\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Flow by each period, region and country\nflow_period_region_country <- readr::read_csv(here::here(\"data\", \"processed\", \"flow_period_region_country.csv\"))\n```\n:::\n\n\n# Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1\n\n# Flow by each period - add total\nflow_period <- flow_period_region_country |> \n  dplyr::group_by(period) %>% \n  dplyr::count(wt = n) %>% \n  dplyr::ungroup() %>%\n  dplyr::add_count(name = \"total_period\", wt = n)\n\n# Flow by each region - add total from region_type\nflow_region <- flow_period_region_country %>% \n  dplyr::group_by(region_type, region_museum) %>% \n  dplyr::count(wt = n) %>% \n  dplyr::ungroup() %>%\n  dplyr::group_by(region_type) %>%\n  dplyr::add_count(name = \"total_region_type\", wt = n) %>% \n  dplyr::ungroup()\n\nreadr::write_csv(flow_region, here::here(\"data\",\"processed\", \"flow_region.csv\"))\n\n# Flow by each country - add total from country_type\nflow_country <- flow_period_region_country %>% \n  dplyr::group_by(country_type, country_museum) %>% \n  dplyr::count(wt = n) %>% \n  dplyr::ungroup() %>%\n  dplyr::group_by(country_type) %>%\n  dplyr::add_count(name = \"total_country_type\", wt = n) %>% \n  dplyr::ungroup()\n\n# 2\n\n# Flow by each period and region - add total from period and region_type\nflow_period_region <- flow_period_region_country %>% \n  dplyr::group_by(period, region_type, region_museum) %>% \n  dplyr::count(wt = n) %>% \n  dplyr::ungroup()%>%\n  dplyr::group_by(period, region_type) %>%\n  dplyr::add_count(name = \"total_period_region_type\", wt = n) %>% \n  dplyr::ungroup()\n\nreadr::write_csv(flow_period_region, here::here(\"data\",\"processed\", \"flow_period_region.csv\"))\n\n# Flow by each region and country - add total from country_type\nflow_region_country <- flow_period_region_country %>% \n  dplyr::group_by(region_type, region_museum,\n                  country_type, country_museum) %>% \n  dplyr::count(wt = n) %>% \n  dplyr::ungroup() %>%\n  dplyr::group_by(country_type) %>%\n  dplyr::add_count(name = \"total_country_type\", wt = n) %>% \n  dplyr::ungroup()\n\n# Proportions\n\n# Flow by each period and region - add proportions\nflow_period_region_prop <- flow_period_region %>%\n  # ungroup\n  dplyr::ungroup() %>%\n  # group by period and museum region\n  dplyr::group_by(period, region_museum) %>%\n  # count how many NBTs were deposited in the museums of this region during the period\n  dplyr::add_count(wt = n, name = \"total_period_region_museum\") %>%\n  # ungroup\n  dplyr::ungroup() %>%\n  # group by period\n  dplyr::group_by(period) %>%\n  # count how many NBTs were described during the period\n  dplyr::add_count(wt = n, name = \"total_period\") %>%\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) %>%\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_period_region_museum,\n                prop_DR = n/total_period_region_type) %>% \n  dplyr::ungroup() %>% \n  dplyr::mutate(prop_DC = ifelse(is.na(prop_DC), 0, prop_DC))\n\nreadr::write_csv(flow_period_region_prop, here::here(\"data\",\"processed\", \"flow_period_region_prop.csv\"))\n\n# Flow by each period and region - add proportions\nflow_region_prop <- flow_region %>%\n  # ungroup\n  dplyr::ungroup() %>%\n  # group by period and museum region\n  dplyr::group_by(region_museum) %>%\n  # count how many NBTs were deposited in the museums of this region\n  dplyr::add_count(wt = n, name = \"total_region_museum\") %>%\n  # ungroup\n  dplyr::ungroup() %>%\n  # filter only within each region\n  dplyr::filter(region_type == region_museum) %>%\n  #add prop_DC (Domestic Contribution) and prop_DR (Domestic Retention)\n  dplyr::mutate(prop_DC = n/total_region_museum,\n                prop_DR = n/total_region_type)\n\nreadr::write_csv(flow_region_prop, here::here(\"data\",\"processed\", \"flow_region_prop.csv\"))\n```\n:::\n\n\n# Museum data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmuseum_data <- readr::read_csv(here::here(\"data\", \"museum_data.csv\"))\n\ninfra_museum <-\n  museum_data %>%\n  dplyr::group_by(country_museum) %>%\n  dplyr::count(name = \"n.museums\")\n\nreadr::write_csv(infra_museum, here::here(\"data\",\"processed\", \"infra_museum.csv\"))\n```\n:::\n\n\n# Native and Types species by country list\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Native\nspp_native_distribution <- readr::read_csv(here::here(\"data\", \"processed\", \"spp_native_distribution.csv\")) \n\ndf_country_native <- spp_native_distribution %>%\n  dplyr::group_by(country_distribution, region_distribution) %>%\n  dplyr::count(name = \"native.richness\") %>%\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_native, here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n\n# Types\nspp_type_distribution <- readr::read_csv(here::here(\"data\", \"processed\", \"spp_type_distribution.csv\")) \n\ndf_country_type <- spp_type_distribution %>%\n  dplyr::group_by(country_museum, region_museum) %>%\n  dplyr::count(name = \"type_richness\") %>%\n  dplyr::ungroup()\n\nreadr::write_csv(df_country_type, here::here(\"data\",\"processed\", \"df_country_type.csv\"))\n```\n:::\n\n\n# Bio-Dem\n\nWe downloaded data from [Bio-Dem](https://bio-dem.surge.sh/#awards) data base and saved them as csv files. Here I read these files that contain information on GDP per capta (e_migdppc), total number of occurrence species records from gbif (records), records per area from gbif (records_per_area), years since independence for each country (yearsSinceIndependence). Country names is represented by iso3c code - an unique three letters code that identify each country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_bio_dem <- readr::read_csv(file = here::here(\"data\", \"bio-dem_data.csv\"))\n\nreadr::write_csv(df_bio_dem, here::here(\"data\", \"bio-dem_data.csv\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}