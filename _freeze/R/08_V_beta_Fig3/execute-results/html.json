{
  "hash": "ef7f2ba9f6679d504998442c5063ff11",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"08_V_beta_Fig3\"\nsubtitle: \"Fig 3 - Beta diversity map\"\nformat: html\neval: FALSE\n---\n\n\n# Plotting beta diversity map\n\nLoading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(cowplot)\n#map\nlibrary(rnaturalearth)\nlibrary(rmapshaper)\nlibrary(sf)\nlibrary(biscale)\n```\n:::\n\n\nData used\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 02_D_beta-countries.qmd\ndf_all_beta <- readr::read_csv(here::here(\"data\", \"processed\", \"df_all_beta.csv\"))\n```\n:::\n\n\nJoining metric information with geographical data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- rnaturalearth::ne_countries(returnclass = \"sf\")\n\nsf_countries <-\n  sf::st_as_sf(countries) |>\n  dplyr::filter(admin != \"Antarctica\") |>\n  sf::st_transform(crs = \"+proj=moll +x_0=0 +y_0=0 +lat_0=0 +lon_0=0\") |> \n  dplyr::select(iso_a3_eh)\n\ndf_all_beta_sf <-\n  sf_countries |>\n  dplyr::full_join(df_all_beta, by = c(iso_a3_eh = \"countries\"))\n```\n:::\n\n\nFirst processing spatial data to convert NA values into 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_all_beta_sf2 <- df_all_beta_sf |> \n  sf::st_as_sf() |> \n  rmapshaper::ms_filter_islands(min_area = 12391399903) |> \n  dplyr::mutate(\n    type.beta = ifelse(is.na(type.beta), \n                           0, \n                           type.beta),\n    native.beta = ifelse(is.na(native.beta), \n                           0, \n                           native.beta))\n```\n:::\n\n\nCreate palettes\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalette_blue <- colorRampPalette(c(\"#d3d3d3\", \"#accaca\", \"#81c1c1\", \"#52b6b6\"))\n\npalette_pink <- colorRampPalette(c(\"#d3d3d3\", \"#c5acc2\", \"#bb84b1\", \"#ac5a9c\"))\n```\n:::\n\n\n# Plotting maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_native_beta <- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = native.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_pink(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Native\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n\nmap_type_beta <- \n  ggplot() +\n  geom_sf(data = df_all_beta_sf2,\n          aes(geometry = geometry,\n              fill = type.beta),\n          color = \"white\",\n          size = 0.1, na.rm = T) +\n  scale_fill_gradientn(\n    colors = palette_blue(10),\n    na.value = \"#d3d3d3\",\n    limits = c(0,1)\n  )+\n  guides(fill = guide_colorbar(\n    barheight = unit(0.1, units = \"in\"),\n    barwidth =  unit(4, units = \"in\"),\n    ticks.colour = \"grey20\",\n    title.position=\"top\", \n    title.hjust = 0.5\n  )) +\n  labs(\n    fill = \"Types\"\n  )+\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.margin = margin(-10,0,0,0,\"pt\"),\n    axis.text = element_blank(),  \n    axis.ticks = element_blank(),\n    axis.line = element_blank()\n  ) \n```\n:::\n\n\nPlotting the two quantities (native and types turnover) in a bivariate map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf_bivar_types <-\n  bi_class(df_all_beta_sf2, \n           x = type.beta, \n           y = native.beta, \n           style = \"equal\",\n           dim = 4)\n\nbivar_map_types <- \n  ggplot() +\n  geom_sf(data = sf_bivar_types, \n          aes(geometry = geometry,\n              fill = bi_class), \n          color = \"white\",\n          size = 0.1, \n          show.legend = FALSE) +\n  bi_scale_fill(pal = \"DkBlue2\", \n                dim = 4) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_blank(),\n        axis.text = element_blank(),  \n        axis.ticks = element_blank(),\n        axis.line = element_blank(),\n    panel.background = element_rect(fill = NA),\n    plot.background = element_rect(fill = NA)\n  ) \n\nlegend <-\n  bi_legend(pal = \"DkBlue2\",\n            dim = 4,\n            xlab = \"NBT\",\n            ylab = \"Native\",\n            size = )\n\nbivar_map_type_final <- \n  ggdraw() +\n  draw_plot(legend, 0.0, 0.15, 0.25, 0.25) +\n  draw_plot(bivar_map_types, 0, 0, 1, 1)\n```\n:::\n\n\nJoining all the maps \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_turnover_all <- map_native_beta+map_type_beta+bivar_map_type_final+\n  patchwork::plot_layout(\n    design = \n\"AB\n CC\"\n  )+\n  patchwork::plot_annotation(tag_levels = \"a\")&\n  theme(\n    plot.tag = element_text(face = \"bold\", hjust = 0, vjust = 1),\n    plot.tag.position = c(0, 1),\n  )\n\n\nggsave(here::here(\"output\", \"Figures\", \"Fig3.png\"),\n       map_turnover_all, dpi=600, width = 10, height = 9)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}