{
  "hash": "64dc6bcc55d39140d7898ce54e2467cc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Supplementary material\"\nformat: html\neval: FALSE\n---\n\n\nIn this document we provide the code to reproduce the Figures and Tables presented in supplementary material of the manuscript **\"The macroecology of knowledge: Spatio-temporal patterns of name-bearing types in biodiversity science\"**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr) # read csv objects\nlibrary(dplyr) # manipulate tables\nlibrary(ggplot2) # plot figures\nlibrary(scales) # change axis values\nlibrary(countrycode) # download country information\nlibrary(glmmTMB) # read models\n```\n:::\n\n\n# Native species richness\n\nWe calculate the native species richness for each country from data in the Catalog of Fishes. We used this source to avoid taxonomic mismatches between species names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 01_C_data_preparation.qmd\ndf_country_native <- readr::read_csv(file = here::here(\"data\",\"processed\", \"df_country_native.csv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- \n  rnaturalearth::ne_countries(scale = \"medium\",\n                                         returnclass = \"sf\") |>\n  dplyr::filter(region_wb != \"Antarctica\")|>\n  rmapshaper::ms_filter_islands(min_area = 20000000000) |>\n  rmapshaper::ms_simplify(keep = 0.95)\n\nsf_countries <-\n  sf::st_as_sf(countries) |>\n  dplyr::filter(admin != \"Antarctica\") |> \n  dplyr::select(iso_a3)\n\ndf_country_native_sf <-\n  sf_countries |>\n  dplyr::full_join(df_country_native, \n                   by = c(iso_a3 = \"country_distribution\"))\n```\n:::\n\n\n## Figure S1 - Native richness\n\nNative richness was extracted from the Catalog of Fishes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_country_native_sf |>\n  ggplot()+\n  geom_sf(aes(fill = native.richness))+\n  scale_fill_distiller(palette = \"YlGnBu\",\n                       direction = 1,\n                       na.value = \"grey90\",\n                       breaks = c(1, 1000, 2000,3000, 3854))+\n  labs(\n    fill = \"Native richness\"\n  )+\n  guides(fill = guide_colorbar(barwidth = 20))+\n  theme_void()+\n  theme(\n    legend.position = \"top\",\n    legend.title.position = \"top\",\n    legend.title = element_text(hjust = 0.5),\n    plot.background = element_rect(fill = \"white\",\n                                   color = NA)\n  )+\n  coord_sf(\n    crs = \"+proj=moll +x_50=0 +y_0=0 +lat_0=0 +lon_0=0\"\n    )\n\nggsave(here::here(\"output\", \"Figures\",\n                  \"Supp-material\", \"FigS1_native_richness.png\"),\n       width = 7, height = 5, dpi = 600)\n```\n:::\n\n\n# All time Domestic Contribution (DC) and Domestic Retention (DR)\n\nHere we provided all time values of DR and DC for each region. We used the same data from Figure 2 of the main text, but pulling together all the data \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 01_C_data_preparation.qmd\nflow_region_prop <- readr::read_csv(file = here::here(\"data\",\"processed\", \"flow_region_prop.csv\"))\n```\n:::\n\n\n## Figure S2 - Scatterplot of all-time\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_region_prop |>\n  ggplot(aes(x = prop_DC, y = prop_DR, fill = region_type))+\n  geom_hline(yintercept = 0.5, linetype = \"dashed\")+\n  geom_vline(xintercept = 0.5, linetype = \"dashed\")+\n  geom_point(\n    shape = 21,\n    size = 2.5\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  scale_x_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  scale_y_continuous(\n    labels = scales::label_percent(),\n    expand = expansion(mult = c(0.05, 0))\n  )+\n  labs(\n    x = \"Domestic Constribution (DC)\",\n    y = \"Domestic Retention (DR)\"\n  )+\n  theme_classic()+\n  theme(\n    strip.background = element_rect(fill = NA, color = NA),\n    strip.text = element_text(face = \"bold\"),\n    legend.position = \"none\",\n    plot.background = element_blank(),\n    panel.spacing = unit(5, \"pt\"),\n    panel.spacing.x = unit(15, \"pt\"),\n    plot.margin = margin(5,15,5,5,\"pt\"),\n    axis.line = element_line(lineend = \"round\"),\n    axis.text = element_text(color = \"black\"),\n    axis.ticks = element_line(color = \"black\")\n  )+\n  coord_cartesian(xlim = c(0,1),\n                  ylim = c(0,1),\n                  clip = \"off\")\n\n# saving image\nggsave(filename = here::here(\"output\", \"Figures\", \"Supp-material\", \"FigS2_scatterplot.png\"), \n       width = 3.5, height = 3)\n```\n:::\n\n\n# Model results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sjPlot)    # creating summary tables of model results\nlibrary(glmmTMB)   # read model output objects\nlibrary(DHARMa)    # diagnostic graphics of models\nlibrary(here)      # constructing file paths\n```\n:::\n\n\nWe provide here the detailed results from all models used in the main text of the manuscript. \n\n## Model data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 <- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT <- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native <- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt <- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))\n```\n:::\n\n\n## Tables with estimated parameters\n\nProducing tables with sjPlot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsjPlot::tab_model(mod_counting_NBT, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\", \n                                  \"Dispersion parameter\"), \n                  dv.labels = \"Total Name Bearing Types\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n\n# Table for betabinomial model with Domestic contribution\n\nsjPlot::tab_model(mod_DC, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Contribution\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n\n# Table for betabinomial model with Domestic retention\n\nsjPlot::tab_model(mod_DR, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Domestic Retention\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with native turnover \n\nsjPlot::tab_model(mod_turnover_native, \n                  transform = NULL, \n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"Native turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n\n# Table for beta model with nbt turnover \n\nsjPlot::tab_model(mod_turnover_nbt, \n                  transform = NULL,\n                  pred.labels = c(\"Intercept\", \n                                  \"Native richness\",\n                                  \"Gbif records per area\",\n                                  \"Years since independence\", \n                                  \"GDP\", \n                                  \"Number of museums\"), \n                  dv.labels = \"NBT turnover\", \n                  string.pred = \"Coefficients\", \n                  string.est = \"Estimates\", \n                  string.p = \"P-value\")\n```\n:::\n\n\n## Diagnostic graphics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# total number of NBT\nDHARMa::simulateResiduals(fittedModel = mod_counting_NBT, plot = T)\n\n# Domestic Contribution and Domestic Retention\nDHARMa::simulateResiduals(fittedModel = mod_DC, plot = TRUE) # DC\nDHARMa::simulateResiduals(fittedModel = mod_DR, plot = TRUE) # DR\n\n# turnover metrics\nDHARMa::simulateResiduals(fittedModel = mod_turnover_native, plot = TRUE)\nDHARMa::simulateResiduals(fittedModel = mod_turnover_nbt, plot = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}