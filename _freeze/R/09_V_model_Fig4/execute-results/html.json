{
  "hash": "2a1018883cab3161737e1ce33edce66c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"09_V_model_Fig4\"\nsubtitle: \"Fig 4 - Model figures\"\nformat: html\neval: FALSE\n---\n\n\n# Model predictions and figures in the main text\n\n## Loading packages, data and functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data\nlibrary(readr)     # reading CSV files\nlibrary(here)      # constructing file paths\nlibrary(ggeffects) # extracting model predictions\nlibrary(tibble)    # creating tibbles (data frames)\n\n# plots\nlibrary(scales)    # scale transformations and labels\nlibrary(ggplot2)   # data visualization\nlibrary(patchwork) # combining plots\n```\n:::\n\n\nReading model results for counting, DR, DC and native and NBT turnover\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data from 03_C_data_preparation.qmd\ndf_country_complete6 <- readr::read_csv(here::here(\"data\", \"processed\", \"df_country_complete6.csv\"))\n\n# Data from 04_D_model_NBTs.qmd\nmod_counting_NBT <- readRDS(here::here(\"output\", \n                                       \"models\", \n                                       \"model_res_counting.rds\")) # NBT total countings\nmod_DC <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dc.rds\"))\nmod_DR <- readRDS(here::here(\"output\", \n                             \"models\", \n                             \"model_res_dr.rds\"))\nmod_turnover_native <- readRDS(here::here(\"output\", \n                                          \"models\",\n                                      \"model_res_turnover_native.rds\"))\nmod_turnover_nbt <- readRDS(here::here(\"output\", \n                                       \"models\",\n                                       \"model_res_turnover_nbt.rds\"))\n\n# function\nsqrt_trans <- scales::trans_new(\"sqrt_with_zero\", \n                        transform = function(x) ifelse(x == 0, 0, sqrt(x)),\n                        inverse = function(x) x^2)\n```\n:::\n\n\n## Total NBT counting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extracting predicted values\npred_mod_counting_gdp <-\n  ggeffects::ggpredict(mod_counting_NBT, \"gdp.pad[-1:4 by=.05]\")\n\npred_mod_counting_richness <-\n  ggeffects::ggpredict(mod_counting_NBT, \"native.richness.pad[-0.4:8.6 by=.05]\")\n\n# plotting figure 4a\na <-\n  tibble(\n  x= df_country_complete6$gdp.pad,\n  y = df_country_complete6$type.richness.pad,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_gdp,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_gdp,\n              aes(x = x,\n                  y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1))+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,100,1000,10000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks.x = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\")\n\n# plotting figure 4b\nb <- tibble(\n  x= df_country_complete6$native.richness.pad,\n  y = df_country_complete6$type.richness.pad,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_counting_richness,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = ifelse(conf.high >= 20000, 20000, conf.high)),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_counting_richness,\n              aes(x = x,\n                  y = predicted))+\n  annotate(\n    \"segment\",\n    x = 5, xend = Inf,\n    y = Inf, yend = Inf,\n    linetype = \"dotted\"\n  )+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1))+\n  scale_y_continuous(trans = sqrt_trans,\n                     expand = expansion(mult = c(0,0)),\n                     breaks = c(0,1000,10000,100000,300000),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  guides(\n    y = guide_axis_logticks()\n  )+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Native richness\",\n       y = \"Number of NBT\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks.x = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\",\n                  xlim = c(-0.6,NA),\n                  ylim = c(NA, 20000))\n```\n:::\n\n\n## Domestic Contribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# predicted values\npred_mod_dc <-\n  ggeffects::ggpredict(mod_DC, \"gdp.pad[-1:4 by=.05]\")\n\n# plotting figure 4c\nc <- tibble(\n  x = df_country_complete6$gdp.pad,\n  y = df_country_complete6$prop_DC,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dc,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dc,\n              aes(x = x,\n                  y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1)) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Contribution\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\",\n                                      lineend = \"round\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\",\n                  ylim = c(0,1))\n```\n:::\n\n\n## Domestic Retention\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# predicted values\npred_mod_dr <-\n  ggeffects::ggpredict(mod_DR, \"gdp.pad[-1:4 by=.05]\")\n\n# plotting figure 4d\nd <- tibble(\n  x = df_country_complete6$gdp.pad,\n  y = df_country_complete6$prop_DR,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_dr,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_dr,\n              aes(x = x,\n                  y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1)) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"Domestic Retention\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\",\n                                      lineend = \"round\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\",\n                  ylim = c(0,1))\n```\n:::\n\n\n## Native turnover\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_mod_beta_native <- \n  ggeffects::ggpredict(mod_turnover_native, \"n.museums.pad[-0.40:4 by=.05]\")\n\n\n# plotting figure 4e\ne <- tibble(\n  x = df_country_complete6$gdp.pad,\n  y = df_country_complete6$native.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_native,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_native,\n              aes(x = x,\n                  y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1))+\n  scale_y_continuous(expand = expansion(mult = c(0,0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Number of Museums\",\n       y = \"Native turnover\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\",\n                                      lineend = \"round\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\",\n                  ylim = c(0,1))\n```\n:::\n\n\n## NBT turnover\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# predictions\npred_mod_beta_type <- \n  ggeffects::ggpredict(mod_turnover_nbt, \"gdp.pad[-1:4 by=.05]\")\n\n# plotting figure 4f\nf <- tibble(\n  x = df_country_complete6$gdp.pad,\n  y = df_country_complete6$type.beta.model,\n  country = df_country_complete6$country,\n  region = df_country_complete6$region\n) |>\n  ggplot(aes(x=x,y=y))+\n  geom_ribbon(data = pred_mod_beta_type,\n              aes(x = x,\n                  y = predicted,\n                  ymin = conf.low,\n                  ymax = conf.high),\n              alpha = 0.2)+\n  geom_line(data = pred_mod_beta_type,\n              aes(x = x,\n                  y = predicted))+\n  geom_point(aes(fill = region),\n             shape = 21)+\n  scale_x_continuous(expand = expansion(mult = c(0,0)),\n                     breaks = seq(0,10,1)) +\n  scale_y_continuous(expand = expansion(mult = c(0)),\n                     labels = scales::label_number(scale_cut = scales::cut_short_scale()))+\n  scale_fill_manual(\n    values = c(\n      \"Europe & Central Asia\" = \"#E64B35FF\",\n      \"East Asia & Pacific\" = \"#4DBBD5FF\",\n      \"North America\" = \"#3C5488FF\",\n      \"South Asia\" = \"#B09C85FF\",\n      \"Latin America & Caribbean\" = \"#00A087FF\",\n      \"Sub-Saharan Africa\" = \"#F39B7FFF\",\n      \"Middle East & North Africa\" = \"#8491B4FF\"\n    )\n  )+\n  labs(x = \"Gross Domestic Product - GDP\",\n       y = \"NBT turnover\") +\n  theme_classic()+\n    theme(\n      axis.title = element_text(face = \"bold\"),\n      axis.text = element_text(color = \"black\"),\n      axis.line = element_blank(),\n      axis.ticks = element_blank(),\n      panel.grid.major = element_line(linetype = \"dashed\",\n                                      lineend = \"round\"),\n      legend.position = \"none\"\n        )+\n  coord_cartesian(clip = \"off\",\n                  ylim = c(0,1))\n```\n:::\n\n\n## Joining all plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfig_model <-\n  a+b+c+d+e+f+\n  patchwork::plot_annotation(tag_levels = \"a\")+\n  patchwork::plot_layout(nrow = 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# saving model figure\n\nggsave(here::here(\"output\", \"Figures\", \"fig4.png\"),\n       width = 6, height = 8,\n       dpi = 600, plot = fig_model)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}